unit UnitCielo;

interface

uses
  System.Classes,DBClient, Vcl.Dialogs, System.SysUtils;

type TCielo = class
  procedure importaArquivo(aCli: TClientDataSet; arquivo: TFileName);
  procedure buscaTitulo;
  function getSQLTitulo:String;
end;

implementation

uses
  Data.SqlExpr,XPROCS;

{ TCielo }

procedure TCielo.buscaTitulo;
begin
  try
  
  finally

  end;
end;

function TCielo.getSQLTitulo: String;
var vQryTitulo: TSQLQuery;
begin
  try 
    
    Result:= 
    ' SELECT                                                                                                          '+ 
    ' TAB_FLUXO.COD_BANCO_PGTO,                                                                                       '+ 
    ' TAB_FLUXO.DES_CC,                                                                                               '+ 
    ' TAB_BANCO_CC.DES_AGENCIA,                                                                                       '+
    ' TAB_FLUXO.COD_ESTABELECIMENTO_TEF,                                                                              '+ 
    ' TAB_FLUXO.DTA_VENCIMENTO,                                                                                       '+ 
    ' TAB_FLUXO.DTA_EMISSAO,                                                                                          '+ 
    ' TAB_BANDEIRA.DES_BANDEIRA,                                                                                      '+ 
    ' TAB_FLUXO.NUM_PARCELA,                                                                                          '+ 
    ' TAB_FLUXO.QTD_PARCELA,                                                                                          '+ 
    ' TAB_FLUXO.NUM_BIN_TEF,                                                                                          '+ 
    ' TAB_FLUXO.COD_TRANSACAO_TEF,                                                                                    '+ 
    ' TAB_FLUXO.NUM_NSU_HOST_TEF,                                                                                     '+ 
    ' TAB_FLUXO.COD_TRANSACAO_TEF,                                                                                    '+ 
    ' TAB_FLUXO.COD_AUTORIZACAO_TEF,                                                                                  '+ 
    ' CASE                                                                                                            '+ 
    '   WHEN TAB_ENTIDADE.FLG_DEBITO = 'S' THEN                                                                       '+ 
    '     TAB_LOJA_BANDEIRA.VAL_TAXA_DEBITO                                                                           '+ 
    '   WHEN TAB_FLUXO.QTD_PARCELA > 1 AND TAB_LOJA_BANDEIRA.VAL_TAXA_PARC > 0 THEN                                   '+ 
    '     TAB_LOJA_BANDEIRA.VAL_TAXA_PARC                                                                             '+ 
    '   ELSE                                                                                                          '+ 
    '     TAB_LOJA_BANDEIRA.VAL_TAXA_BANDEIRA                                                                         '+ 
    ' END AS VAL_TAXA_BANDEIRA,                                                                                       '+ 
    ' CAST(ROUND((TAB_FLUXO.VAL_PARCELA + TAB_FLUXO.VAL_JUROS + TAB_FLUXO.VAL_CREDITO                                 '+ 
    '   		- TAB_FLUXO.VAL_DESCONTO - TAB_FLUXO.VAL_DEVOLUCAO - TAB_FLUXO.VAL_RETENCAO                               '+ 
    '			- TAB_FLUXO.VAL_TAXA_ADM + TAB_FLUXO.VAL_OUTROS), 2) AS DOUBLE PRECISION) AS VAL_LIQUIDO,                   '+ 
    ' CAST(ROUND(TAB_FLUXO.VAL_PARCELA,2) AS DOUBLE PRECISION) AS VAL_PARCELA,                                        '+ 
    ' CAST((TAB_FLUXO.VAL_JUROS) AS DOUBLE PRECISION) AS VAL_JUROS,                                                   '+ 
    ' CAST((TAB_FLUXO.VAL_CREDITO) AS DOUBLE PRECISION) AS VAL_CREDITO,                                               '+ 
    ' CAST((TAB_FLUXO.VAL_DESCONTO) AS DOUBLE PRECISION) AS VAL_DESCONTO,                                             '+ 
    ' CAST((TAB_FLUXO.VAL_DEVOLUCAO) AS DOUBLE PRECISION) AS VAL_DEVOLUCAO,                                           '+ 
    ' CAST((TAB_FLUXO.VAL_RETENCAO) AS DOUBLE PRECISION) AS VAL_RETENCAO,                                             '+ 
    ' CAST(CASE WHEN (TAB_FLUXO.VAL_PARCELA > 0.00) THEN                                                              '+ 
    '   ROUND(ABS((((TAB_FLUXO.VAL_JUROS + TAB_FLUXO.VAL_CREDITO - TAB_FLUXO.VAL_DESCONTO - TAB_FLUXO.VAL_DEVOLUCAO - '+ 
    '                     TAB_FLUXO.VAL_RETENCAO - TAB_FLUXO.VAL_TAXA_ADM + TAB_FLUXO.VAL_OUTROS) * 100) /            '+ 
    '                     TAB_FLUXO.VAL_PARCELA)),2)                                                                  '+ 
    ' ELSE                                                                                                            '+ 
    '   0.00                                                                                                          '+ 
    ' END AS DOUBLE PRECISION) AS PER_EVENTO,                                                                         '+ 
    ' CAST(ROUND((TAB_FLUXO.VAL_TAXA_ADM), 2) AS DOUBLE PRECISION) AS VAL_TAXA_ADM,                                   '+ 
    ' CAST(ROUND((TAB_FLUXO.VAL_OUTROS), 2) AS DOUBLE PRECISION) AS VAL_OUTROS                                        '+ 
    '                                                                                                                 '+ 
    ' FROM TAB_FLUXO                                                                                                  '+ 
    ' LEFT JOIN TAB_BANCO_CC ON                                                                                       '+ 
    '  TAB_FLUXO.COD_BANCO = TAB_BANCO_CC.COD_BANCO AND                                                               '+ 
    '  TAB_FLUXO.DES_CC    = TAB_BANCO_CC.DES_CC AND                                                                  '+ 
    '  TAB_FLUXO.COD_LOJA  = TAB_BANCO_CC.COD_LOJA                                                                    '+ 
    ' LEFT JOIN TAB_ENTIDADE ON                                                                                       '+ 
    '  TAB_FLUXO.COD_ENTIDADE = TAB_ENTIDADE.COD_ENTIDADE                                                             '+ 
    ' LEFT JOIN TAB_LOJA_BANDEIRA ON                                                                                  '+ 
    '  TAB_FLUXO.COD_BANDEIRA = TAB_LOJA_BANDEIRA.COD_BANDEIRA AND                                                    '+ 
    '  TAB_FLUXO.COD_LOJA = TAB_LOJA_BANDEIRA.COD_LOJA                                                                '+ 
    ' LEFT JOIN TAB_BANDEIRA ON                                                                                       '+ 
    '  TAB_FLUXO.COD_BANDEIRA = TAB_BANDEIRA.COD_BANDEIRA                                                             '+ 
    ' WHERE                                                                                                           '+ 
    '  TAB_FLUXO.COD_LOJA = :COD_LOJA                                                                                 '+ 
    '  AND TAB_FLUXO.DTA_ENTRADA =  :DTA_ENTRADA                                                                      '+ 
    '  AND TAB_FLUXO.COD_BANDEIRA = :COD_BANDEIRA                                                                     ';        
  finally

  end;
end;

procedure TCielo.importaArquivo(aCli: TClientDataSet; arquivo: TFileName);
var  gravar, ler: TStrings;
            i: integer;
begin
  gravar:= TStringList.Create;
  ler:=    TStringList.Create;

  ler.LoadFromFile(arquivo);

  gravar.Delimiter:=';';
  gravar.StrictDelimiter:= True;

  for I := 0 to Pred(ler.Count) do
  begin

    if i > 3 then
    begin
      gravar.DelimitedText:= ler.Strings[i];

      aCli.Append;
      aCli.FieldByName('STATUS').AsString:= gravar.Strings[0];
      aCli.FieldByName('TIPO_LANCAMENTO').AsString:= gravar.Strings[1];
      aCli.FieldByName('DESCRICAO').AsString:= gravar.Strings[2];
      aCli.FieldByName('BANCO').AsString:= gravar.Strings[3];
      aCli.FieldByName('AGENCIA').AsString:= gravar.Strings[4];
      aCli.FieldByName('CONTA').AsString:= gravar.Strings[5];
      aCli.FieldByName('GRAVAME').AsString:= gravar.Strings[6];
      aCli.FieldByName('CNPJ_INST_ORIG_NEG').AsString:= gravar.Strings[7];
      aCli.FieldByName('NOME_INST_ORIG_NEG').AsString:= gravar.Strings[8];
      aCli.FieldByName('ESTABELECIMENTO').AsString:= gravar.Strings[9];
      aCli.FieldByName('DATA_PAGAMENTO').AsString:= gravar.Strings[10];
      aCli.FieldByName('DATA_LANCAMENTO').AsString:= gravar.Strings[11];
      aCli.FieldByName('BANDEIRA').AsString:= gravar.Strings[12];
      aCli.FieldByName('FORMA_PAGAMENTO').AsString:= gravar.Strings[13];
      aCli.FieldByName('NUMERO_PARCELA').AsString:= gravar.Strings[14];
      aCli.FieldByName('QUANTIDADE_PARCELA').AsString:= gravar.Strings[15];
      aCli.FieldByName('NUMERO_CARTAO').AsString:= gravar.Strings[16];
      aCli.FieldByName('COD_TRANSACAO').AsString:= gravar.Strings[17];
      aCli.FieldByName('COD_AUTORIZACAO').AsString:= gravar.Strings[18];
      aCli.FieldByName('NSU').AsString:= gravar.Strings[19];
      aCli.FieldByName('VALOR_BRUTO').AsString:= gravar.Strings[20];
      aCli.FieldByName('VALOR_LIQUIDO').AsString:= gravar.Strings[21];
      aCli.FieldByName('VALOR_COBRADO').AsString:= gravar.Strings[22];
      aCli.FieldByName('VALOR_PENDENTE').AsString:= gravar.Strings[23];
      aCli.FieldByName('VALOR_TOTAL').AsString:= gravar.Strings[24];
      aCli.FieldByName('RESUMO_OPERACAO').AsString:= gravar.Strings[25];
      aCli.FieldByName('COD_VENDA').AsString:= gravar.Strings[26];
      aCli.FieldByName('NUMERO_MAQUINA').AsString:= gravar.Strings[27];
      aCli.FieldByName('PERIODO_CONSIDERADO').AsString:= gravar.Strings[28];
      aCli.FieldByName('NUMERO_OPERACAO').AsString:= gravar.Strings[29];
      aCli.FieldByName('TAXA_ANTECIPACAO').AsString:= gravar.Strings[30];
      aCli.Post;
    end;
  end;
end;

end.
